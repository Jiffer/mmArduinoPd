#N canvas 423 216 765 502 10;
#X msg 75 112 close;
#X msg 57 61 devices;
#X msg 74 85 open 4;
#X floatatom 161 361 5 0 0 0 - - -;
#X floatatom 201 358 5 0 0 0 - - -;
#X floatatom 242 359 5 0 0 0 - - -;
#N canvas 95 274 651 363 read_analog 0;
#X obj 167 61 inlet;
#X obj 156 319 outlet;
#X obj 229 319 outlet;
#X obj 278 320 outlet;
#X obj 181 232 list prepend;
#X obj 267 233 t l;
#N canvas 163 220 646 477 serial_println 0;
#X obj 60 25 inlet;
#X obj 156 145 t f b;
#X obj 156 209 +;
#X obj 183 170 f;
#X obj 183 192 * 10;
#X msg 198 139 0;
#X obj 156 231 t f f;
#X obj 60 248 f;
#X obj 60 122 t b b;
#X obj 60 270 outlet;
#X text 152 17 to be used with [comport] for utilising Arduino's Serial.println()
function;
#X obj 156 116 - 48;
#X text 186 211 this is taken from the code often used in the Arduino:
;
#X text 208 229 while(Serial.available));
#X text 216 244 byte inByte = Serial.read() \;;
#X text 216 257 if((inByte >= '0') && (inByte <= '9'));
#X text 208 295 (curly brackets are not available in Pd's comments)
;
#X text 235 273 int temp = temp * 10 + inByte - '0' \;;
#X text 214 345 written by Alexandros Drymonitis;
#X obj 111 73 moses 48;
#X obj 156 95 moses 58;
#X text 172 72 let only digits through;
#X obj 60 47 sel 10 13;
#X connect 0 0 22 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 3 1;
#X connect 6 0 7 1;
#X connect 6 1 3 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 5 0;
#X connect 11 0 1 0;
#X connect 19 1 20 0;
#X connect 20 0 11 0;
#X connect 22 0 8 0;
#X connect 22 2 19 0;
#X restore 167 160 pd serial_println;
#X obj 181 283 unpack f f f;
#X text 285 160 turn Serial.println characters into integers;
#X text 303 230 pack values into a list that starts right after the
;
#X text 303 245 begin packet character;
#X text 283 278 send each value to its own outlet add an 'f' and an
outlet for each value you are sending between begin/end chars;
#X text 315 89 65 = 'A': begin digital packet;
#X text 316 104 97 = 'a' : end digital packet;
#X obj 167 89 parse-start-stop 65 97;
#X connect 0 0 14 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 6 0 4 0;
#X connect 7 0 1 0;
#X connect 7 1 2 0;
#X connect 7 2 3 0;
#X connect 14 0 6 0;
#X connect 14 1 4 1;
#X restore 163 265 pd read_analog;
#N canvas 95 274 761 439 read_digital 0;
#X obj 167 61 inlet;
#X obj 156 319 outlet;
#X obj 229 319 outlet;
#X obj 278 320 outlet;
#X obj 181 232 list prepend;
#X obj 267 233 t l;
#N canvas 163 220 646 477 serial_println 0;
#X obj 60 25 inlet;
#X obj 156 145 t f b;
#X obj 156 209 +;
#X obj 183 170 f;
#X obj 183 192 * 10;
#X msg 198 139 0;
#X obj 156 231 t f f;
#X obj 60 248 f;
#X obj 60 122 t b b;
#X obj 60 270 outlet;
#X text 152 17 to be used with [comport] for utilising Arduino's Serial.println()
function;
#X obj 156 116 - 48;
#X text 186 211 this is taken from the code often used in the Arduino:
;
#X text 208 229 while(Serial.available));
#X text 216 244 byte inByte = Serial.read() \;;
#X text 216 257 if((inByte >= '0') && (inByte <= '9'));
#X text 208 295 (curly brackets are not available in Pd's comments)
;
#X text 235 273 int temp = temp * 10 + inByte - '0' \;;
#X text 214 345 written by Alexandros Drymonitis;
#X obj 111 73 moses 48;
#X obj 156 95 moses 58;
#X text 172 72 let only digits through;
#X obj 60 47 sel 10 13;
#X connect 0 0 22 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 3 1;
#X connect 6 0 7 1;
#X connect 6 1 3 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 5 0;
#X connect 11 0 1 0;
#X connect 19 1 20 0;
#X connect 20 0 11 0;
#X connect 22 0 8 0;
#X connect 22 2 19 0;
#X restore 167 160 pd serial_println;
#X obj 167 89 parse-start-stop 68 100;
#X obj 181 283 unpack f f f;
#X text 316 104 100 = 'd' : end digital packet;
#X text 315 89 68 = 'D': begin digital packet;
#X text 285 160 turn Serial.println characters into integers;
#X text 303 230 pack values into a list that starts right after the
;
#X text 303 245 begin packet character;
#X text 274 280 send each value to its own outlet add an 'f' and an
outlet for each value you are sending between begin/end chars;
#X connect 0 0 7 0;
#X connect 4 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 4 1;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 7 1 4 1;
#X connect 8 0 1 0;
#X connect 8 1 2 0;
#X connect 8 2 3 0;
#X restore 29 266 pd read_digital;
#X text 121 84 <- open the port where your Arduino is connected \,
mine is 4;
#X text 116 60 <- click to list the devices available;
#X msg 166 168 info;
#X obj 220 202 route open;
#X obj 220 223 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 76 140 r toArduino;
#X obj 420 409 f;
#X obj 506 409 f;
#X obj 581 407 f;
#X obj 362 300 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 435 354 5 0 0 0 - - -;
#X floatatom 520 354 5 0 0 0 - - -;
#X floatatom 596 351 5 0 0 0 - - -;
#X obj 420 449 s toArduino;
#X obj 435 384 clip 0 255;
#X obj 362 280 loadbang;
#X obj 521 380 clip 0 255;
#X obj 596 380 clip 0 255;
#X obj 162 298 resample 50;
#X obj 202 317 resample 50;
#X obj 241 337 resample 50;
#X floatatom 29 359 5 0 0 0 - - -;
#X floatatom 69 356 5 0 0 0 - - -;
#X floatatom 110 357 5 0 0 0 - - -;
#X obj 30 296 resample 50;
#X obj 70 315 resample 50;
#X obj 109 335 resample 50;
#X obj 73 191 comport 4 115200;
#X msg 359 245 0;
#X obj 343 211 t b;
#X obj 363 317 metro 30;
#X obj 363 342 t b b b;
#X obj 165 148 metro 1000;
#X obj 164 108 loadbang;
#X obj 167 129 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 29 458 by Jiffer Harriman;
#X text 28 472 Creative Commons Open Source;
#X connect 0 0 35 0;
#X connect 0 0 37 0;
#X connect 1 0 35 0;
#X connect 2 0 35 0;
#X connect 6 0 26 0;
#X connect 6 1 27 0;
#X connect 6 2 28 0;
#X connect 7 0 32 0;
#X connect 7 1 33 0;
#X connect 7 2 34 0;
#X connect 10 0 35 0;
#X connect 11 0 12 0;
#X connect 12 0 17 0;
#X connect 13 0 35 0;
#X connect 14 0 21 0;
#X connect 15 0 21 0;
#X connect 16 0 21 0;
#X connect 17 0 38 0;
#X connect 18 0 22 0;
#X connect 19 0 24 0;
#X connect 20 0 25 0;
#X connect 22 0 14 1;
#X connect 23 0 17 0;
#X connect 24 0 15 1;
#X connect 25 0 16 1;
#X connect 26 0 3 0;
#X connect 27 0 4 0;
#X connect 28 0 5 0;
#X connect 32 0 29 0;
#X connect 33 0 30 0;
#X connect 34 0 31 0;
#X connect 35 0 7 0;
#X connect 35 0 6 0;
#X connect 35 1 11 0;
#X connect 36 0 17 0;
#X connect 37 0 36 0;
#X connect 38 0 39 0;
#X connect 39 0 16 0;
#X connect 39 1 15 0;
#X connect 39 2 14 0;
#X connect 40 0 10 0;
#X connect 41 0 42 0;
#X connect 42 0 40 0;
